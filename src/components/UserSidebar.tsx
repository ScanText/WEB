import React from 'react';
import { useNavigate } from 'react-router-dom';
import userPlaceholder from '../assets/logo.png';

interface UserSidebarProps {
  userPhoto: string | null;
  setUserPhoto: (value: string | null) => void;
}

const UserSidebar: React.FC<UserSidebarProps> = ({ userPhoto, setUserPhoto }) => {
  const navigate = useNavigate();

  const handlePhotoUpload = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      const reader = new FileReader();
      reader.onloadend = () => {
        const base64 = reader.result as string;
        localStorage.setItem('userPhoto', base64);
        setUserPhoto(base64);
      };
      reader.readAsDataURL(file);
    }
  };

  const handleGoToPricing = () => {
    console.log('‚û°Ô∏è –ù–∞—á–∞–ª–æ –æ–ø–ª–∞—Ç—ã: –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞');
    navigate('/pricing');
  };
  return (
    <div style={styles.sidebar}>
      <img
        src={userPhoto || userPlaceholder}
        alt="User"
        style={styles.avatar}
      />
      <p style={{ fontWeight: 'bold', marginTop: 10 }}>üë§ –õ–æ–≥–æ—Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</p>

      <label htmlFor="photoUpload" style={styles.actionBtn}>üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å</label>
      <input
        id="photoUpload"
        type="file"
        accept="image/*"
        onChange={handlePhotoUpload}
        style={{ display: 'none' }}
      />
      <button
        onClick={() => {
          localStorage.removeItem('userPhoto');
          setUserPhoto(null);
        }}
        style={styles.actionBtn}
      >
        üóë –£–¥–∞–ª–∏—Ç—å
      </button>
      <div style={{ display: 'flex', flexDirection: 'column', gap: 10, marginTop: 20 }}>
        <button
          //onClick={() => navigate('/pricing')}
          onClick={handleGoToPricing}
          style={{
            backgroundColor: '#f97316', // üüß –æ—Ä–∞–Ω–∂–µ–≤–∞—è
            color: '#fff',
            padding: '10px 16px',
            fontSize: 14,
            borderRadius: 8,
            border: 'none',
            cursor: 'pointer',
          }}
        >
          üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
        </button>

        <button
          onClick={() => navigate('/payments')}
          style={{
            backgroundColor: '#60a5fa', // üîµ —Å–ø–æ–∫–æ–π–Ω—ã–π —Å–∏–Ω–∏–π
            color: '#fff',
            padding: '10px 16px',
            fontSize: 14,
            borderRadius: 8,
            border: 'none',
            cursor: 'pointer',
          }}
        >
          üßæ –ò—Å—Ç–æ—Ä–∏—è –ø–ª–∞—Ç–µ–∂–µ–π
        </button>

        <button
          onClick={() => navigate('/feedbacks')}
          style={{
            backgroundColor: '#a78bfa', // üü£ –ø–∞—Å—Ç–µ–ª—å–Ω—ã–π —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
            color: '#fff',
            padding: '10px 16px',
            fontSize: 14,
            borderRadius: 8,
            border: 'none',
            cursor: 'pointer',
          }}
        >
          üí¨ –û—Ç–∑—ã–≤—ã
        </button>

        <button
          onClick={() => navigate('/change-password')}
          style={{
            backgroundColor: '#c084fc', // —Å–≤–µ—Ç–ª–æ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
            color: '#fff',
            padding: '10px 16px',
            fontSize: 14,
            borderRadius: 8,
            border: 'none',
            cursor: 'pointer',
          }}
        >
          üîë –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
        </button>
        <button
          onClick={() => navigate('/user/history')}
          style={{
            backgroundColor: '#225250', // —Å–≤–µ—Ç–ª–æ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
            color: '#fff',
            padding: '10px 16px',
            fontSize: 14,
            borderRadius: 8,
            border: 'none',
            cursor: 'pointer',
          }}
        >
          üîë –ò—Å—Ç–æ—Ä–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
        </button>
      </div>     
    </div>
  );
};

const styles: { [key: string]: React.CSSProperties } = {
  sidebar: {
    width: 260,
    marginRight: 40,
    textAlign: 'center',
  },
  avatar: {
    width: 140,
    height: 140,
    borderRadius: '50%',
    objectFit: 'cover',
    border: '2px solid #ccc',
  },
  actionBtn: {
    backgroundColor: '#5c6bc0',
    color: '#fff',
    padding: '6px 10px',
    borderRadius: 6,
    border: 'none',
    cursor: 'pointer',
    fontSize: 14,
    width: 140,
    marginTop: 8,
  },
  feedbackBox: {
    marginTop: 30,
    padding: 15,
    backgroundColor: '#f9f9f9',
    borderRadius: 10,
    fontSize: 14,
    textAlign: 'left',
  },
  feedbackBtn: {
    backgroundColor: '#3f51b5',
    color: '#fff',
    padding: '8px 12px',
    borderRadius: 6,
    border: 'none',
    cursor: 'pointer',
    fontSize: 14,
  },
};

export default UserSidebar;