/*import React, { useState } from 'react';
import axios from 'axios';

interface CardPaymentButtonProps {
  amount: number;
  subscriptionId: number;
  reference: string;
  login: string;
}

const CardPaymentButton: React.FC<CardPaymentButtonProps> = ({ amount, subscriptionId, reference, login }) => {
  const [loading, setLoading] = useState(false);

  const handlePay = async () => {
    setLoading(true);
    const token = 'uTxwJZS40IeHwlzBmz2FkAh-i5UvDx9Lcpe2hQlfTssI';

    const userId = localStorage.getItem('user_id');

    if (!userId) {
      alert('–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã!');
      setLoading(false);
      return;
    }

    try {
      console.log('üöÄ –°—Ç–∞—Ä—Ç –æ–ø–ª–∞—Ç—ã. –õ–æ–≥–∏–Ω:', login, '| ID —é–∑–µ—Ä–∞:', userId, '| –¢–∞—Ä–∏—Ñ:', subscriptionId, '| –°—É–º–º–∞:', amount);

      // 1. –°–æ–∑–¥–∞–Ω–∏–µ —Å—á—ë—Ç–∞ –≤ Monobank
      const response = await axios.post('https://api.monobank.ua/api/merchant/invoice/create', {
        amount,
        ccy: 980,
        //  redirectUrl: `http://localhost:3000/payment-success?orderId=${reference}`, üëâ –¢–£–¢ –ø–æ–º–µ–Ω—è–π –Ω–∞ —Ç–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π —Ñ—Ä–æ–Ω—Ç
         redirectUrl: `https://6b10-185-137-217-11.ngrok-free.app/payment-success?orderId=${reference}`, // 
        
        callbackUrl: 'https://example.com/fake-callback', // –ú–æ–∂–µ—à—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª—é–±–æ–π
        merchantPaymInfo: {
          reference,
          destination: `–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏: ${reference}`,
        }
      }, {
        headers: {
          'X-Token': token,
          'Content-Type': 'application/json',
        }
      });

      const invoiceUrl = response.data.pageUrl;
      console.log('‚úÖ –°—á—ë—Ç —Å–æ–∑–¥–∞–Ω. –°—Å—ã–ª–∫–∞:', invoiceUrl);

      // 2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–ª–∞—Ç—ë–∂ –≤ —Å–≤–æ–µ–π —Å–∏—Å—Ç–µ–º–µ
      await axios.post('http://localhost:8000/payment/pay', {   // üëâ –¢–£–¢ API –∞–¥—Ä–µ—Å—Å —Å–≤–æ–π!
        user_id: +userId,
        subscription_id: subscriptionId,
        amount,
        method: 'monobank',
        transaction_id: reference,
      });
      console.log('üìù –ü–ª–∞—Ç—ë–∂ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–∞–∑–µ.');

      // 3. –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–ø–ª–∞—Ç—É
      if (invoiceUrl) {
        window.open(invoiceUrl, '_blank');
      } else {
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã.');
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏.');
      }

    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', err);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å.');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{ marginTop: 10 }}>
      <button
        onClick={handlePay}
        disabled={loading}
        style={{ backgroundColor: '#facc15', padding: '10px 20px', borderRadius: 8 }}
      >
        {loading ? '–°–æ–∑–¥–∞–Ω–∏–µ —Å—á—ë—Ç–∞...' : 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å'}
      </button>
    </div>
  );
};

export default CardPaymentButton;

*/
import React, { useState } from 'react';
import axios from 'axios';

interface CardPaymentButtonProps {
  amount: number;
  subscriptionId: number;
}

const CardPaymentButton: React.FC<CardPaymentButtonProps> = ({ amount, subscriptionId }) => {
  const [loading, setLoading] = useState(false);

  const handlePay = async () => {
    const userId = localStorage.getItem('user_id');

    if (!userId) {
      alert('–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return;
    }

    try {
      setLoading(true);

      const res = await axios.post('http://localhost:8000/payment/create-payment', {
        user_id: +userId,
        subscription_id: subscriptionId,
        amount
      });

      const invoiceUrl = res.data.invoice_url;
      console.log('‚úÖ –û—Ç–∫—Ä—ã–≤–∞–µ–º Monobank —Å—Å—ã–ª–∫—É:', invoiceUrl);

      if (invoiceUrl) {
        window.open(invoiceUrl, '_blank');
      } else {
        alert('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á—ë—Ç–∞ –≤ Monobank');
      }

    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–ª–∞—Ç—ã:', err);
      alert('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–ª–∞—Ç—ã');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{ marginTop: 10 }}>
      <button
        onClick={handlePay}
        disabled={loading}
        style={{ backgroundColor: '#facc15', padding: '10px 20px', borderRadius: 8 }}
      >
        {loading ? '–°–æ–∑–¥–∞–Ω–∏–µ —Å—á—ë—Ç–∞...' : 'üí≥ –û–ø–ª–∞—Ç–∏—Ç—å'}
      </button>
    </div>
  );
};

export default CardPaymentButton;
